-- 프로그래머스 SELECT 파트
-- 강원도에 위치한 생산공장 목록 출력하기

SELECT FACTORY_ID, FACTORY_NAME, ADDRESS 
FROM FOOD_FACTORY
WHERE ADDRESS LIKE '강원도%'
ORDER BY FACTORY_ID

-- 오프라인/온라인 판매 데이터 통합하기 (각 테이블 값 빼서 UNION 이용)

SELECT DATE_FORMAT(SALES_DATE,'%Y-%m-%d') AS SALES_DATE, PRODUCT_ID, USER_ID, SALES_AMOUNT
FROM ONLINE_SALE
WHERE SALES_DATE LIKE '2022-03%'
UNION
SELECT DATE_FORMAT(SALES_DATE,'%Y-%m-%d') AS SALES_DATE, PRODUCT_ID, NULL AS USER_ID, SALES_AMOUNT
FROM OFFLINE_SALE
WHERE SALES_DATE LIKE '2022-03%'
ORDER BY SALES_DATE, PRODUCT_ID, USER_ID

-- 상위 n개 레코드 (LIMIT n : n개 SELECT)

SELECT NAME FROM ANIMAL_INS ORDER BY DATETIME LIMIT 1 

-- 어린 동물 찾기 (NOT IN 함수)

SELECT ANIMAL_ID, NAME FROM ANIMAL_INS  WHERE INTAKE_CONDITION NOT IN ('Aged') ORDER BY ANIMAL_ID

-- 조건에 맞는 회원수 구하기

SELECT COUNT(USER_ID) AS USERS 
FROM USER_INFO
-- WHERE YEAR(JOINED)='2021' AND age >= 20 AND age <= 29
WHERE JOINED LIKE '2021%' AND (AGE BETWEEN 20 AND 29)

-- 모든 레코드 조회하기

SELECT * FROM ANIMAL_INS ORDER BY ANIMAL_ID

-- 역순 정렬하기

SELECT NAME, DATETIME FROM ANIMAL_INS ORDER BY ANIMAL_ID DESC

-- 아픈 동물 찾기

SELECT ANIMAL_ID, NAME FROM ANIMAL_INS WHERE INTAKE_CONDITION='Sick' ORDER BY ANIMAL_ID

-- 동물 아이디와 이름

SELECT ANIMAL_ID, NAME FROM ANIMAL_INS ORDER BY ANIMAL_ID

-- 여러 기준으로 정렬하기

SELECT ANIMAL_ID, NAME, DATETIME FROM ANIMAL_INS ORDER BY NAME, DATETIME DESC